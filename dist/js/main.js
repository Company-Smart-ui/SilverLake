"use strict";function _createForOfIteratorHelper(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,c=function(){};return{s:c,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:c}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){s=!0,o=e},f:function(){try{i||null==n.return||n.return()}finally{if(s)throw o}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var body=document.querySelector("body"),html=document.querySelector("html"),header=document.querySelector(".header"),navBtn=document.querySelector(".close"),navBtnPopUp=document.querySelector(".close-pop-up"),popUp=document.querySelector(".wrap-pop-up");function closePopUp(){navBtnPopUp&&navBtnPopUp.addEventListener("click",(function(){popUp.classList.add("cancel")}))}window.onload=function(){pagescroll(),closePopUp(),openGuests(),countAdults(),countChild(),countInfants(),countPets(),window.innerWidth<=992&&openMobileSearch()};var btnGuests=document.querySelector(".btn-guests"),guests=document.querySelector(".guests"),closeGuests=document.querySelector(".close-guests"),adults=0,incrementAdults=document.querySelector("#increment-adults"),decrementAdults=document.querySelector("#decrement-adults"),child=0,incrementChild=document.querySelector("#increment-children"),decrementChild=document.querySelector("#decrement-children"),infants=0,incrementInfants=document.querySelector("#increment-infants"),decrementInfants=document.querySelector("#decrement-infants"),pets=0,incrementPets=document.querySelector("#increment-pets"),decrementPets=document.querySelector("#decrement-pets");function openGuests(){guests&&btnGuests&&(btnGuests.addEventListener("click",(function(){guests.classList.toggle("d-block")})),closeGuests.addEventListener("click",(function(){guests.classList.remove("d-block");var e="",t="",n="",r="";adults>0&&(e=adults+" Adult, ",adults>1&&(e=adults+" Adults, ")),child>0&&(t=child+" Child, ",child>1&&(t=child+" Children, ")),infants>0&&(n=infants+" Infant, ",infants>1&&(n=infants+" Infants, ")),pets>0&&(r=pets+" Pet",pets>1&&(r=pets+" Pets")),btnGuests.innerHTML=e+t+n+r})))}function countAdults(){incrementAdults&&decrementAdults&&(incrementAdults.addEventListener("click",(function(){adults<8&&(adults++,document.getElementById("adults-value").innerHTML=adults)})),decrementAdults.addEventListener("click",(function(){adults>0&&(adults--,document.getElementById("adults-value").innerHTML=adults)})))}function countChild(){incrementChild&&decrementChild&&(incrementChild.addEventListener("click",(function(){child<8&&(child++,document.getElementById("children-value").innerHTML=child)})),decrementChild.addEventListener("click",(function(){child>0&&(child--,document.getElementById("children-value").innerHTML=child)})))}function countInfants(){incrementInfants&&decrementInfants&&(incrementInfants.addEventListener("click",(function(){infants<8&&(infants++,document.getElementById("infants-value").innerHTML=infants)})),decrementInfants.addEventListener("click",(function(){infants>0&&(infants--,document.getElementById("infants-value").innerHTML=infants)})))}function countPets(){incrementPets&&decrementPets&&(incrementPets.addEventListener("click",(function(){pets<8&&(pets++,document.getElementById("pets-value").innerHTML=pets)})),decrementPets.addEventListener("click",(function(){pets>0&&(pets--,document.getElementById("pets-value").innerHTML=pets)})))}function openMobileSearch(){var e=document.querySelector(".btn-search"),t=document.querySelector(".search"),n=document.querySelector(".btn-close");e&&(e.addEventListener("click",(function(){t.classList.add("active")})),n.addEventListener("click",(function(){t.classList.remove("active")})))}var forms=document.getElementsByClassName("needs-validation");forms&&window.addEventListener("load",(function(){Array.prototype.filter.call(forms,(function(e){e.addEventListener("submit",(function(t){!1===e.checkValidity()&&(t.preventDefault(),t.stopPropagation()),e.classList.add("was-validated")}),!1)}))}),!1),function(){var e=document.querySelector(".btn-sale"),t=document.querySelector(".btn-sold"),n=document.querySelector(".block-sale"),r=document.querySelector(".block-sold");e&&t&&(e.addEventListener("click",(function(){n.style.order="-1",r.style.order="0"})),t.addEventListener("click",(function(){r.style.order="-1",n.style.order="0"})))}();var elementsAnimate=document.querySelectorAll(".element-animation");function firterStories(){var e=Array.from(document.querySelectorAll("[data-story]")),t=Array.from(document.querySelectorAll("[data-btn]"));e&&t&&t.forEach((function(n){n.addEventListener("click",(function(){"all"===n.dataset.btn?(e.forEach((function(e){e.classList.remove("d-none","opacity-0","active")})),t.forEach((function(e){e.classList.remove("bg-accent","color-white")}))):n.classList.contains("bg-accent")?(n.classList.remove("bg-accent","color-white"),e.filter((function(e){n.dataset.btn===e.dataset.story&&(e.classList.add("d-none","opacity-0"),e.classList.remove("active"))}))):(n.classList.add("bg-accent","color-white"),e.filter((function(e){e.classList.contains("active")||e.classList.add("d-none","opacity-0"),n.dataset.btn===e.dataset.story&&(e.classList.remove("d-none","opacity-0"),e.classList.add("active"))})))}))}))}function closenav(){header.classList.remove("nav-open"),navBtn.style.marginRight="0",body.classList.remove("scroll-hidden")}function togglenav(){header.classList.toggle("nav-open"),header.classList.contains("nav-open")?(navBtn.style.marginRight=window.innerWidth-html.offsetWidth+"px",body.classList.add("scroll-hidden")):(body.classList.remove("scroll-hidden"),navBtn.style.marginRight="0")}!function(){if(elementsAnimate){var e,t=new IntersectionObserver((function(e){e.forEach((function(e){e.isIntersecting&&e.target.classList.add("element-show")}))}),{threshold:[.5]}),n=_createForOfIteratorHelper(elementsAnimate);try{for(n.s();!(e=n.n()).done;){var r=e.value;t.observe(r)}}catch(e){n.e(e)}finally{n.f()}}}(),function(){var e=document.querySelector(".search"),t=document.querySelector(".search-bottom"),n=document.querySelector(".footer");e&&!t&&n.classList.add("mb-5r","mb-lg-0")}(),firterStories(),navBtn.addEventListener("click",togglenav);var links=header.querySelectorAll("a");function pagescroll(){var e=0;document.querySelector(".fixed")||window.addEventListener("scroll",(function(){e>40&&header.classList.add("scroll"),(e=pageYOffset)<40&&header.classList.remove("scroll")}))}function addScript(e,t){localStorage.getItem(e)&&(t=1);var n=document.createElement("script");return n.async=!0,n.src=e,setTimeout((function(){body.appendChild(n),localStorage.setItem(e,!0)}),t),n}function accordionInit(e){window.addEventListener("load",(function(){var t=e.querySelectorAll(".accordion__item"),n=function(t){var n=e.querySelector(".is-open");r(t),n&&n!==t&&r(n)};t.forEach((function(e){var t=e.querySelector(".accordion__title-text");t.addEventListener("click",(function(){n(e)})),t.addEventListener("keydown",(function(t){"Enter"!==t.code&&"Space"!==t.code||(t.preventDefault(),n(e))}))}));var r=function(e){var t=e.querySelector(".accordion__body");e.classList.contains("is-open")?(t.removeAttribute("style"),e.classList.remove("is-open")):(t.style.overflow="hidden",t.style.transition="max-height 10s cubic-bezier(0.22, 0.61, 0.36, 1)",t.style.maxHeight="2000px",e.classList.add("is-open"))}}))}if(links.forEach((function(e){e.addEventListener("click",closenav)})),window.addEventListener("load",(function(){var e=window.matchMedia("(max-width: 480px)").matches,t=1,n=document.querySelector(".swiper-delay_js");if(n){var r=parseInt(n.dataset.time);r>0&&(t=1+r/5,e&&(t=r),addScript("js/swiper-min.js",t).addEventListener("load",(function(){addScript("js/slider-init.js",0)})))}})),document.querySelector(".accordion")){var accordions=document.querySelectorAll(".accordion");accordions.forEach((function(e){accordionInit(e)}))}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
